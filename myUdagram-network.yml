Description: >
    Project 2 - Deploy a high-availability web app using CloudFormation
    Udagram Web App - Rahul Gupta    
    This is the Cloudformation template for the network resources for this app.
    This includes VPC, Subnets (Public and Private, Internet Gateway, NatGateway, Route tables) 
    and output of the resources parameters for further use.

Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String

  myVPCCIDR:
    Description: "This is the VPC we have created"
    Type: String

  myPublicSubnet1CIDR:
    Description: "This is the public subnet 1 we have created"
    Type: String

  myPublicSubnet2CIDR:
    Description: "This is the public subnet 2 we have created"
    Type: String

  myPrivateSubnet1CIDR:
    Description: "This is the private subnet 1 we have created"
    Type: String

  myPrivateSubnet2CIDR:
    Description: "This is the private subnet 2 we have created"
    Type: String

Resources:
  # VPC
  myVPC: 
    Type: AWS::EC2::VPC
    Properties:
        CidrBlock: !Ref myVPCCIDR
        EnableDnsHostnames: true
        Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} VPC
  # Internet Gateway           
  myInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
        Tags:
            - Key: Name
              Value: !Sub ${EnvironmentName} IG
          
  myInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
        InternetGatewayId: !Ref myInternetGateway
        VpcId: !Ref myVPC

  myPublicSubnet1: 
    Type: AWS::EC2::Subnet
    Properties:
        VpcId: !Ref myVPC
        AvailabilityZone: !Select [ 0, !GetAZs '' ]
        CidrBlock: !Ref myPublicSubnet1CIDR
        MapPublicIpOnLaunch: true
        Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  myPublicSubnet2: 
    Type: AWS::EC2::Subnet
    Properties:
        VpcId: !Ref myVPC
        AvailabilityZone: !Select [ 1, !GetAZs '' ]
        CidrBlock: !Ref myPublicSubnet2CIDR
        MapPublicIpOnLaunch: true
        Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  myPrivateSubnet1: 
    Type: AWS::EC2::Subnet
    Properties:
        VpcId: !Ref myVPC
        AvailabilityZone: !Select [ 0, !GetAZs '' ]
        CidrBlock: !Ref myPrivateSubnet1CIDR
        MapPublicIpOnLaunch: false
        Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  myPrivateSubnet2: 
    Type: AWS::EC2::Subnet
    Properties:
        VpcId: !Ref myVPC
        AvailabilityZone: !Select [ 1, !GetAZs '' ]
        CidrBlock: !Ref myPrivateSubnet2CIDR
        MapPublicIpOnLaunch: false
        Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Private Subnet (AZ2)

  myNatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: myInternetGatewayAttachment
    Properties:
        Domain: vpc

  myNatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: myInternetGatewayAttachment
    Properties:
        Domain: vpc

  myNatGateway1: 
    Type: AWS::EC2::NatGateway
    Properties: 
        AllocationId: !GetAtt myNatGateway1EIP.AllocationId
        SubnetId: !Ref myPublicSubnet1

  myNatGateway2: 
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt myNatGateway2EIP.AllocationId
        SubnetId: !Ref myPublicSubnet2

  myPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
        VpcId: !Ref myVPC
        Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Public Routes

  myDefaultPublicRoute: 
    Type: AWS::EC2::Route
    DependsOn: myInternetGatewayAttachment
    Properties: 
        RouteTableId: !Ref myPublicRouteTable
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref myInternetGateway

  myPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref myPublicRouteTable
        SubnetId: !Ref myPublicSubnet1

  myPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref myPublicRouteTable
        SubnetId: !Ref myPublicSubnet2

  myPrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties: 
        VpcId: !Ref myVPC
        Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Private Routes (AZ1)

  myDefaultPrivateRoute1:
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref myPrivateRouteTable1
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref myNatGateway1

  myPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref myPrivateRouteTable1
        SubnetId: !Ref myPrivateSubnet1

  myPrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties: 
        VpcId: !Ref myVPC
        Tags: 
            - Key: Name 
              Value: !Sub ${EnvironmentName} Private Routes (AZ2)

  myDefaultPrivateRoute2:
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref myPrivateRouteTable2
        DestinationCidrBlock: 0.0.0.0/0
        NatGatewayId: !Ref myNatGateway2

  myPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref myPrivateRouteTable2
        SubnetId: !Ref myPrivateSubnet2  

Outputs: 

  VPC: 
      Description: A reference to the created VPC
      Value: !Ref myVPC
      Export:
        Name: !Sub ${EnvironmentName}-VPCID

  VPCPublicRouteTable:
      Description: Public Routing
      Value: !Ref myPublicRouteTable
      Export:
        Name: !Sub ${EnvironmentName}-PUB-RT

  VPCPrivateRouteTable1:
      Description: Private Routing AZ1
      Value: !Ref myPrivateRouteTable1
      Export:
        Name: !Sub ${EnvironmentName}-PRI1-RT

  VPCPrivateRouteTable2:
      Description: Private Routing AZ2
      Value: !Ref myPrivateRouteTable2
      Export:
        Name: !Sub ${EnvironmentName}-PRI2-RT

  PublicSubnets:
      Description: A list of the public subnets
      Value: !Join [ ",", [ !Ref myPublicSubnet1, !Ref myPublicSubnet2 ]]
      Export:
        Name: !Sub ${EnvironmentName}-PUB-NETS

  PrivateSubnets:
      Description: A list of the private subnets
      Value: !Join [ ",", [ !Ref myPrivateSubnet1, !Ref myPrivateSubnet2 ]]
      Export:
        Name: !Sub ${EnvironmentName}-PRIV-NETS

  PublicSubnet1:
      Description: A reference to the public subnet in the 1st Availability Zone
      Value: !Ref myPublicSubnet1
      Export:
        Name: !Sub ${EnvironmentName}-PUB1-SN

  PublicSubnet2: 
      Description: A reference to the public subnet in the 2nd Availability Zone
      Value: !Ref myPublicSubnet2
      Export:
        Name: !Sub ${EnvironmentName}-PUB2-SN

  PrivateSubnet1:
      Description: A reference to the private subnet in the 1st Availability Zone
      Value: !Ref myPrivateSubnet1
      Export:
        Name: !Sub ${EnvironmentName}-PRI1-SN

  PrivateSubnet2: 
      Description: A reference to the private subnet in the 2nd Availability Zone
      Value: !Ref myPrivateSubnet2
      Export:
        Name: !Sub ${EnvironmentName}-PRI2-SN